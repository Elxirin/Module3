<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:context="http://www.springframework.org/schema/context"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"

	xmlns:tx="http://www.springframework.org/schema/tx"



	xsi:schemaLocation="

			        http://www.springframework.org/schema/beans    
			
			        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			
			        http://www.springframework.org/schema/context
			
			        http://www.springframework.org/schema/context/spring-context.xsd
			
			        http://www.springframework.org/schema/mvc
			
			        http://www.springframework.org/schema/mvc/spring-mvc.xsd
			
			        http://www.springframework.org/schema/tx

                    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
                    
                    default-init-method="myInit" default-destroy-method="tearDown"
                    
                    >
	<!-- <bean id="triangle" class="com.capgemini.FirstDemo.Traingle"> -->
	<bean id="triangle1" class="com.capgemini.collections.Traingle1">
	  <!-- <constructor-arg  value="Equilateral"  ></constructor-arg> -->
	  <!-- <property name="type" value="Scalene" ></property> -->
	   <!-- <property name="type" value="Scalene" ></property>
	   <property name="height" value="20" ></property> -->
	   
	   <!-- <constructor-arg  value="Equilateral"/>
	   <constructor-arg  value="20"/> -->
	   
	   <!-- <constructor-arg  value="20" type="int" /> -->
	   <!-- <constructor-arg  value="20" type="java.Lang.String" /> -->
	   <!-- <constructor-arg  value="20" index="1" />
	   <constructor-arg  value="Equilateral" index="0"   /> -->
	   
	   
	  <!--  <property name="pointA">
	   		<bean class="com.capgemini.FirstDemo.Point" >
	   			<property name="x" value="0"/>
	   			<property name="y" value="0"/>
	   		</bean>
	   </property> -->
	   
		<property name="points">
			<list>
				<ref bean="zeroPoint" />
				<ref bean="point1" />
				<ref bean="point2" />
			</list>
		</property>
	
		
	</bean>
	
	 <bean id="zeroPoint" class="com.capgemini.FirstDemo.Point" >
		<property name="x" value="0" />
		<property name="y" value="0" />
	</bean>
		<bean id="point1" class="com.capgemini.FirstDemo.Point" >
		<property name="x" value="-20"/>
		<property name="y" value="-10" />
	</bean>
	<bean id="point2" class="com.capgemini.FirstDemo.Point" >
		<property name="x" value="20" />
		<property name="y" value="10" />
	</bean>
	
	
	<!-- <bean id="circle" class="com.capgemini.collections.Circle" scope="prototype">
		<property name="center" ref="point1"/>
	</bean> --> 
	
	<!-- <bean id="circle" class="com.capgemini.collections.Circle" autowire="byType" /> -->

	<!-- <bean class="com.capgemini.collections.DisplayNameBeanPostProcessor" /> -->	
	<bean class="com.capgemini.collections.DisplayBeanFactoryPostProcessor" />
</beans>